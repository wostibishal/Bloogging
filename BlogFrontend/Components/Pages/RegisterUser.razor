@page "/registerUser"
@inject NavigationManager NavigationManager
@using Domain
@inject HttpClient Http

<h3>Register User</h3>

<EditForm Model="@registerModel" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="name">Name:</label>
        <InputText id="name" class="form-control" @bind-Value="registerModel.Name" />
    </div>

    <div class="form-group">
        <label for="email">Email:</label>
        <InputText id="email" class="form-control" @bind-Value="registerModel.Email" />
    </div>

    <div class="form-group">
        <label for="password">Password:</label>
        <InputText id="password" class="form-control" @bind-Value="registerModel.Password" type="password" />
    </div>

    <div class="form-group">
        <label for="confirmPassword">Confirm Password:</label>
        <InputText id="confirmPassword" class="form-control" @bind-Value="registerModel.ConfirmPassword" type="password" />
    </div>
    <div class="form-group">
    <label for="role">Role:</label>
    <InputSelect id="role" class="form-control" @bind-Value="registerModel.Role">
        <option value="User">User</option>
        <!-- Add other roles as needed -->
    </InputSelect>
    </div>

    <button type="submit" class="btn btn-primary">Register</button>
</EditForm>

@code {
    private RegisterModel registerModel = new RegisterModel();

    private async Task HandleRegistration()
    {
        var response = await Http.PostAsJsonAsync("api/account/register", registerModel);
        if (response.IsSuccessStatusCode)
        {
            // Handle success
            NavigationManager.NavigateTo("login");
        }
        else
        {
            // Handle errors
            var errors = await response.Content.ReadFromJsonAsync<Dictionary<string, string[]>>();
            // Process errors
        }
    }

}
